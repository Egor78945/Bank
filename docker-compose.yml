version: '3.9'

networks:
  test:
    driver: bridge

services:
  service-discovery:
    container_name: ${SERVICE_DISCOVERY_APPLICATION_NAME}
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION}
        SERVICE_DISCOVERY_PORT: ${SERVICE_DISCOVERY_PORT}
    env_file:
      - .env
    restart: on-failure
    ports:
      - ${SERVICE_DISCOVERY_PORT}:${SERVICE_DISCOVERY_PORT}
    networks:
      - test

  api-gateway-service:
    container_name: ${API_GATEWAY_SERVICE_APPLICATION_NAME}
    build:
      context: ./api-gateway-service
      dockerfile: Dockerfile
      args:
        JAVA_VERSION: ${JAVA_VERSION}
        API_GATEWAY_SERVICE_PORT: ${API_GATEWAY_SERVICE_PORT}
    environment:
      - JAVA_VERSION=${JAVA_VERSION}
      - API_GATEWAY_SERVICE_APPLICATION_NAME=${API_GATEWAY_SERVICE_APPLICATION_NAME}
      - API_GATEWAY_SERVICE_HOST=${API_GATEWAY_SERVICE_HOST}
      - API_GATEWAY_SERVICE_PORT=${API_GATEWAY_SERVICE_PORT}
      - SERVICE_DISCOVERY_HOST=${SERVICE_DISCOVERY_HOST}
      - SERVICE_DISCOVERY_PORT=${SERVICE_DISCOVERY_PORT}
    restart: on-failure
    depends_on:
      - service-discovery
    ports:
      - ${API_GATEWAY_SERVICE_PORT}:${API_GATEWAY_SERVICE_PORT}
    networks:
      - test

  user-database-service:
    container_name: ${USER_DATABASE_SERVICE_APPLICATION_NAME}
    build:
      context: ./user-database-service
      dockerfile: Dockerfile
      args:
        POSTGRES_DB: ${POSTGRES_USER_DATABASE_NAME}
        POSTGRES_HOST: ${POSTGRES_USER_HOST}
        POSTGRES_PORT: ${POSTGRES_USER_PORT}
        POSTGRES_USERNAME: ${POSTGRES_USER_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRES_USER_PASSWORD}
    environment:
      - SERVICE_DISCOVERY_HOST=${SERVICE_DISCOVERY_HOST}
      - SERVICE_DISCOVERY_PORT=${SERVICE_DISCOVERY_PORT}
      - USER_DATABASE_SERVICE_APPLICATION_NAME=${USER_DATABASE_SERVICE_APPLICATION_NAME}
      - USER_DATABASE_SERVICE_HOST=${USER_DATABASE_SERVICE_HOST}
      - USER_DATABASE_SERVICE_PORT=${USER_DATABASE_SERVICE_PORT}
      - USER_DATABASE_SERVICE_TABLE_USERS=${USER_DATABASE_SERVICE_TABLE_USERS}
      - USER_DATABASE_SERVICE_TABLE_USER_DETAILS=${USER_DATABASE_SERVICE_TABLE_USER_DETAILS}
      - USER_DATABASE_SERVICE_TABLE_CARD_TYPES=${USER_DATABASE_SERVICE_TABLE_CARD_TYPES}
      - USER_DATABASE_SERVICE_TABLE_USER_CARDS=${USER_DATABASE_SERVICE_TABLE_USER_CARDS}
      - USER_DATABASE_SERVICE_TABLE_ROLES=${USER_DATABASE_SERVICE_TABLE_ROLES}
      - USER_DATABASE_SERVICE_TABLE_USER_ROLES=${USER_DATABASE_SERVICE_TABLE_USER_ROLES}
      - USER_DATABASE_SERVICE_USER_ROLE_1=${USER_DATABASE_SERVICE_USER_ROLE_1}
      - USER_DATABASE_SERVICE_USER_ROLE_2=${USER_DATABASE_SERVICE_USER_ROLE_2}
      - USER_DATABASE_SERVICE_CARD_TYPE_1=${USER_DATABASE_SERVICE_CARD_TYPE_1}
      - USER_DATABASE_SERVICE_CARD_TYPE_2=${USER_DATABASE_SERVICE_CARD_TYPE_2}
      - POSTGRES_HOST=${POSTGRES_USER_HOST}
      - POSTGRES_PORT=${POSTGRES_USER_PORT}
      - POSTGRES_DB=${POSTGRES_USER_DATABASE_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USER_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_USER_PASSWORD}
    depends_on:
      - service-discovery
      - postgres-users
    restart: on-failure
    networks:
      - test

  postgres-users:
    container_name: ${POSTGRES_USER_HOST}
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_USER_DATABASE_NAME}
      - POSTGRES_USER=${POSTGRES_USER_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_USER_PASSWORD}
    restart: on-failure
    ports:
      - ${POSTGRES_USER_PORT}:${POSTGRES_USER_PORT}
    networks:
      - test

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: ${KEYCLOAK_SERVER_HOST}
    command:
      - start-dev
      - --import-realm
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN_NAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://${POSTGRES_USER_HOST}:${POSTGRES_USER_PORT}/${POSTGRES_USER_DATABASE_NAME}
      - KC_DB_USERNAME=${POSTGRES_USER_USERNAME}
      - KC_DB_PASSWORD=${POSTGRES_USER_PASSWORD}
      - KC_HTTP_PORT=${KEYCLOAK_SERVER_PORT}
    volumes:
      - ./keycloak/configuration/realm/bank/realm-config.json:/opt/keycloak/data/import/realm-config.json:ro
    ports:
      - ${KEYCLOAK_SERVER_PORT}:${KEYCLOAK_SERVER_PORT}
    restart: on-failure
    depends_on:
      - postgres-users
    networks:
      - test